[project]
name = "fibonacci"
version = "0.1.0"
description = "Add your description here"
readme = "README.md"
requires-python = ">=3.12"
dependencies = []

[tool.maturin]
module-name = "fibonacci._core"
python-packages = ["fibonacci"]
python-source = "src"

[tool.scikit-build]
minimum-version = "build-system.requires"
build-dir = "build/{wheel_tag}"

[build-system]
requires = ["scikit-build-core>=0.10", "pybind11", "maturin>=1.0,<2.0", "setuptools>=75.0.0", "setuptools-rust", "wheel", "ninja"]
# Choose one of the following build backends:
# build-backend = "scikit_build_core.build"  # C++ only (using CMakeLists.txt)
# build-backend = "maturin"  # Rust only
build-backend = "setuptools.build_meta"  # Both (using setup.py + setuptools-rust, MANIFEST.in)

[tool.setuptools.packages]
# Pure Python packages/modules
find = { where = ["src"] }

[[tool.setuptools-rust.ext-modules]]
# Private Rust extension module to be nested into the Python package
target = "fibonacci._core"  # The last part of the name (e.g. "_lib") has to match lib.name in Cargo.toml,
                             # but you can add a prefix to nest it inside of a Python package.
path = "Cargo.toml"      # Default value, can be omitted
binding = "PyO3"         # Default value, can be omitted


[dependency-groups]
dev = [
    "ipython>=8.30.0",
    "mypy>=1.13.0",
    "pre-commit>=4.0.1",
    "pytest>=8.3.4",
    "ruff>=0.8.3",
]
